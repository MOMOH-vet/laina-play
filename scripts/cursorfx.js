  (() => {
    const reduceMotion = window.matchMedia && window.matchMedia('(prefers-reduced-motion: reduce)').matches; if (reduceMotion) return;
    const canvas = document.getElementById('cursorfx-canvas'); const ctx = canvas.getContext('2d');
    let dpr = Math.min(window.devicePixelRatio || 1, 2); function resize(){ const rect = canvas.getBoundingClientRect(); canvas.width = Math.floor(rect.width*dpr); canvas.height = Math.floor(rect.height*dpr); ctx.setTransform(dpr,0,0,dpr,0,0);} window.addEventListener('resize', resize, {passive:true}); resize();
    const colors = ['#22D3EE','#38BDF8','#0ea5e9']; const particles = []; const MAX_PARTICLES = 600; const TRAIL_PER_MOVE = 4; let rafId = null; let lastTime = performance.now(); let lastClickable = null;
    function spawn(x,y,speed,angle,size,life){ particles.push({ x,y, vx:Math.cos(angle)*speed, vy:Math.sin(angle)*speed, life, maxLife:life, size, color:colors[(Math.random()*colors.length)|0] }); }
    window.addEventListener('pointermove', (e)=>{ const x=e.clientX,y=e.clientY; for(let i=0;i<TRAIL_PER_MOVE;i++){ const a=Math.random()*Math.PI*2; const s=0.4+Math.random()*1.2; spawn(x,y,s,a,1.5+Math.random()*1.2,500+Math.random()*500);} if(!rafId) rafId=requestAnimationFrame(loop); }, {passive:true});
    function closestClickable(el){ while(el&&el!==document.body){ const t=el.tagName; if(t==='A'||t==='BUTTON'||t==='INPUT'||t==='SELECT'||t==='TEXTAREA'||el.getAttribute('role')==='button'||el.hasAttribute('data-clickable')) return el; el=el.parentElement;} return null; }
    window.addEventListener('pointerover',(e)=>{ const clickable = closestClickable(e.target) || (getComputedStyle(e.target).cursor==='pointer'? e.target : null); if(clickable && clickable!==lastClickable){ lastClickable=clickable; const x=e.clientX,y=e.clientY; const count=22; for(let i=0;i<count;i++){ const a=(i/count)*Math.PI*2 + Math.random()*0.25; const s=1.6+Math.random()*1.6; spawn(x,y,s,a,2+Math.random()*2,600+Math.random()*500);} if(!rafId) rafId=requestAnimationFrame(loop);} else if(!clickable){ lastClickable=null; } }, {passive:true});
    window.addEventListener('pointerout',(e)=>{ if(closestClickable(e.target) && !closestClickable(e.relatedTarget)) lastClickable=null; }, {passive:true});
    function loop(ts){ rafId=null; const now=ts||performance.now(); const dt=Math.min(now-lastTime,50); lastTime=now; ctx.clearRect(0,0,canvas.width/dpr,canvas.height/dpr); ctx.globalCompositeOperation='lighter'; for(let i=particles.length-1;i>=0;i--){ const p=particles[i]; p.life-=dt; if(p.life<=0){ particles.splice(i,1); continue;} p.vx*=0.985; p.vy*=0.985; p.vy+=0.02; p.x+=p.vx*(dt/16); p.y+=p.vy*(dt/16); const t=p.life/p.maxLife; const r=p.size*(0.5+0.5*t); const g=ctx.createRadialGradient(p.x,p.y,0,p.x,p.y,r*3); g.addColorStop(0, p.color+'cc'); g.addColorStop(1, p.color+'00'); ctx.fillStyle=g; ctx.beginPath(); ctx.arc(p.x,p.y,r*3,0,Math.PI*2); ctx.fill(); ctx.fillStyle=p.color; ctx.globalAlpha=0.9*Math.max(0.2,t); ctx.beginPath(); ctx.arc(p.x,p.y,r*0.6,0,Math.PI*2); ctx.fill(); ctx.globalAlpha=1; } ctx.globalCompositeOperation='source-over'; if(particles.length>MAX_PARTICLES) particles.splice(0, particles.length-MAX_PARTICLES); if(particles.length) rafId=requestAnimationFrame(loop); }
    document.addEventListener('visibilitychange',()=>{ if(document.hidden&&rafId){ cancelAnimationFrame(rafId); rafId=null; }});
  })();
